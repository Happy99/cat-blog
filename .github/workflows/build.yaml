name: Test build & release to production

on:
  push:
    branches:
      - master
      - production

jobs:
  build-master:
    if: github.ref == 'refs/heads/master' # my master branch
    runs-on: ubuntu-latest
    env:
      APPLIFTING_API_URL: ${{ secrets.APPLIFTING_API_URL }}
      APPLIFTING_API_KEY: ${{ secrets.APPLIFTING_API_KEY }}
      NEXT_PUBLIC_FRONTEND_API_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_API_URL }}
      NEXT_PUBLIC_TEST_CLIENT: ${{ secrets.NEXT_PUBLIC_TEST_CLIENT }}
      TEST_DEV: ${{ secrets.TEST_DEV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

  build-production:
    if: github.ref == 'refs/heads/production' # production branch - husky should do auto build & release
    runs-on: ubuntu-latest
    env:
      APPLIFTING_API_URL: ${{ secrets.APPLIFTING_API_URL }}
      APPLIFTING_API_KEY: ${{ secrets.APPLIFTING_API_KEY }}
      NEXT_PUBLIC_FRONTEND_API_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_API_URL }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      NEXT_PUBLIC_TEST_CLIENT: ${{ secrets.NEXT_PUBLIC_TEST_CLIENT }}
      TEST_DEV: ${{ secrets.TEST_DEV }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
